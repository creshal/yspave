#! /usr/bin/env python
# (c) Samuel Vincent Creshal <samuel@creshal.de> 2014
import argparse,getpass,sys, readline, os
from yspave import pave, crypto, util, pwgen, commands, metadata
from colorama import Fore as fg

actions = metadata.actions % (pave.PaveCfg.pwgen_bits,pave.PaveCfg.pwgen_bits)

parser = argparse.ArgumentParser (prog=metadata.appname, description=actions,formatter_class=argparse.RawTextHelpFormatter, epilog=metadata.examples)
parser.add_argument('--version', '-v', action='version', version='%(prog)s '+pave.appvers)
parser.add_argument('--file','-f', help='Database file',nargs='?',default=pave.db_filename)
parser.add_argument('--config-file','-c',help='Configuration file',nargs='?',default=pave.config_filename)
parser.add_argument('--pwgen-mode','-m',choices=['print','p','alnum','a','xkcd','x'],nargs='?')
parser.add_argument('action', choices=['migrate','new','add','edit','del','get','copy','pwgen','import'], default=None,nargs='?')
parser.add_argument('query',default=None,nargs='?',help='Search string')
args = parser.parse_args()

if os.path.exists (args.config_file):
	config = pave.PaveCfg (args.config_file, args.pwgen_mode)
else:
	if args.config_file == pave.config_filename: #implicitly create default file
		config = pave.PaveCfg (None, args.pwgen_mode)
	else: raise IOError ('Config file %s does not exist!'%args.config_file)

#This is a special case -- one-shot password generator, not operating on the database at all
if args.action == 'pwgen':
	print (pwgen.PwGen(config).mkpass (args.query))
	sys.exit (0)

while True:
	try:
		password = getpass.getpass ('Database password: ')
		db = crypto.PaveDB (password, args.file, config)
		del (password)
		break
	except EOFError:          sys.exit (0)
	except KeyboardInterrupt: sys.exit (1)
	except:pass

cmd = commands.Commands(config, db)

if args.action:
	#single command mode
	cmd.dispatch (args.action, args.query)
else:
	#interactive mode
	while True:
		try:
			action, query = map (lambda x: x.strip(), (util.prompt ('> ')+' ').split(' ',1))
			if not action: raise EOFError
		except EOFError:          sys.exit (0)
		except KeyboardInterrupt: sys.exit (1)

		if action in ['help','?']:
			print (actions+examples)
		else:
			try:
				cmd.dispatch (action, query)
			except (Exception,KeyboardInterrupt) as e:
				print (fg.YELLOW+str(e))

